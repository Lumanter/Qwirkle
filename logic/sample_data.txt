Board and moves configuration to test bots decision making

Shapes: ■ ● ◆ ♧ X ★
Colors: rd yl gr or pr bl

GUI test data
# test for qwirkle chances
board = [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, '●yl', 0, 0], [0, 0, 0, 0, 0, '●pr', 0, 0], [0, 0, 0, 0, 0, '●or', 0, 0], [0, '■rd', '★rd', '◆rd', '♧rd', '●rd', 0, 0], [0, '■bl', 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]
hand = ['★bl', '◆bl', '♧bl', '●bl']
points bot: causes 1 chance
smarter bot: doesn't any chance

# test for possible lines killed
board = [[0, 0,     0,     0,     0,     0,     0,     0,   0],[0, '■bl', '★bl', 'Xbl', '◆bl', '♧bl','●bl',  0,   0],[0, 0,     0,     0,     0,     0,     '●rd', 0,    0],[0, 0,     0,     0,     0,     0,     '●gr', 0,    0],[0, 0,     0,     0,     0,    '■yl', '●yl', '★yl', 0],[0, 0,     0,     0,     0,     0,     0,     0,    0]]

hand = ['◆gr', '◆rd', '◆yl']
points bot: kills 2 lines
smarter bot: doesn't kill any line


Logic test data
# test data for qwirkle chances caused 
        board_state = [[0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, y_crc, 0, 0],
                       [0, 0, 0, 0, 0, p_crc, 0, 0],
                       [0, 0, 0, 0, 0, o_crc, 0, 0],
                       [0, 0, 0, 0, 0, r_crc, 0, 0],
                       [0, b_sqr, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0]]
        board = Board(board_state)
	    tile_combo = TileCombo()
        tile_combo.tiles = [b_crc, r_crc]
        tile_combo.positions = [Position(3, 4), Position(4, 4)]

# test data for possible lines killed
        board_state = [[0, 0,     0,     0,     0,     0, 0,     0],
                       [0, 0,     0,     0,     b_x,   0, 0,     0],
                       [0, 0,     0,     0,     0,     0, 0,     0],
                       [0, b_sqr, b_str, b_dmd, 0,     0, 0,     0],
                       [0, r_sqr, 0,     0,     0,     0, r_clv, 0],
                       [0, 0,     0,     0,     0,     0, 0,     0],
                       [0, 0,     0,     0,     o_crc, 0, 0,     0],
		       [0, 0,     0,     0,     0,     0, 0,     0]]
        board_object = Board(board_state)
        tile_combo = TileCombo()
        tile_combo.tiles = [b_crc, r_crc]
        tile_combo.positions = [Position(3, 4), Position(4, 4)]

# test data for best points combo
    board = Board([[0, 0,     0,     0, 0],
               [0, 0,     r_crc, 0, 0],
               [0, b_sqr, b_crc, 0, 0],
               [0, 0,     0,     0, 0],
               [0, 0,     0,     0, 0]])
    bot.hand = [r_sqr, o_crc]